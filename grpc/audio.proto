syntax = "proto3";

option go_package = "./audio";
import "google/api/annotations.proto";

service AudioService {

    rpc GetAudio(GetAudioRequest) returns (stream AudioChunk) {
        option (google.api.http) = {
        post: "/olivia/api/v1/service/audio/{name}/GetAudio"
        };
    };

    rpc Play(PlayRequest) returns (PlayResponse) {
      option (google.api.http) = {
        post: "/olivia/api/v1/service/audio/{name}/play"
        };
    };


    rpc Properties(PropertiesRequest) returns (PropertiesResponse) {
         option (google.api.http) = {
        post: "/olivia/api/v1/service/audio/{name}/properties"
    };
};
}


  message AudioInfo {
    string codec = 1; // pcm16,pcm32,mp3,opus,etc.
    int32 sample_rate = 2;
    int32 num_channels = 3; // number of input/output streams (e.g 2 for stereo speaker: left and right)
  }


  message GetAudioRequest {
    string name = 1;
    float duration_seconds = 2;
    string codec = 3;
    string request_id =4;
    float max_duration_seconds = 5;
    float previous_timestamp = 6;

  }

  message AudioChunk {
    bytes audio_data = 1;
    AudioInfo info = 2;
    int32 sequence = 3;   // Sequence number
    int64 start_timestamp_nanoseconds = 4;
    int64 end_timestamp_nanoseconds = 5;
  }


  message PlayRequest {
    string name = 1;
    bytes audio_data = 2;
    AudioInfo info = 3;
  }

  message PlayResponse {
    string name =1;
  }

  message PropertiesRequest {
    string name = 1;
  }

  message PropertiesResponse{
	repeated string supported_codecs = 1;
	repeated int32 sample_rate = 2;
	int32 num_channels = 3;
  }


