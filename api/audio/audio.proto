syntax = "proto3";

option go_package = "./audio";

service AudioService {
    rpc Play(PlayRequest) returns (PlayResponse) {
    };

    rpc StopPlay(StopPlayRequest) returns (StopPlayResponse) {
    };

    rpc Record(RecordRequest) returns (stream AudioChunk) {
    };
    rpc StopRecord(StopRecordRequest) returns (StopRecordResponse) {
    };
  }


  message RecordRequest {
    string name = 1;
    int32 duration_seconds = 2;
    string format = 3;
    int32 sample_rate = 4;
    int32 channels = 5;
  }

  message AudioChunk {
    bytes audio_data = 1; // Raw PCM audio data
    int64 timestamp = 2;  // Timestamp in microseconds
    int32 sequence = 3;   // Sequence number
  }

  message StopRecordRequest {

  }


  message StopRecordResponse {

  }


  message PlayRequest {
    string name = 1;
    string file_path = 2;
  }

  message PlayResponse {
  }

  message StopPlayRequest {
    string name = 1;
  }

  message StopPlayResponse {
    string text = 1;
  }




